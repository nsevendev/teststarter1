name: ghcr-cleanup
on:
  schedule:
    - cron: "0 3 * * *"   # tous les jours Ã  03:00 UTC
  workflow_dispatch:

jobs:
  # ===== Nettoyage pour l'image APP =====
  cleanup-app:
    runs-on: ubuntu-latest
    env:
      OWNER: ${{ github.repository_owner }}
      OWNER_KIND: users
      PACKAGE: teststarter1/app
    steps:
      - name: Ensure jq is available
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Delete untagged versions (APP)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          PKG_ENC="$(printf '%s' "$PACKAGE" | jq -sRr @uri)"
          API_BASE="https://api.github.com/${OWNER_KIND}/${OWNER}/packages/container/${PKG_ENC}/versions"
          PAGE=1
          DELETED=0

          while true; do
            echo "Fetching page ${PAGE}..."
            RESP=$(curl -fsSL -H "Authorization: Bearer ${GH_TOKEN}" -H "Accept: application/vnd.github+json" \
              "${API_BASE}?per_page=100&page=${PAGE}")

            COUNT=$(echo "${RESP}" | jq 'length')
            [ "${COUNT}" -eq 0 ] && break

            IDS=$(echo "${RESP}" | jq -r '.[] | select(.metadata.container.tags | length == 0) | .id')
            if [ -n "${IDS}" ]; then
              for id in ${IDS}; do
                echo "Deleting untagged version id=${id}"
                curl -fsSL -X DELETE -H "Authorization: Bearer ${GH_TOKEN}" -H "Accept: application/vnd.github+json" \
                  "${API_BASE}/${id}" >/dev/null
                DELETED=$((DELETED+1))
              done
            fi
            PAGE=$((PAGE+1))
          done

          echo "Done. Deleted ${DELETED} untagged versions for ${PACKAGE}."
